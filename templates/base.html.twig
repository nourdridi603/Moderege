<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>{% block title %}Moderage {% endblock %}</title>
   
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">


<style>
.a{
            background-color: #c3cff1;
            margin: 0;
            padding: 0;
            height: 50px;
        }
       
        .c{
            width: 800px;
            align-content: center;
            background-color:  #c3cff1;
            margin-top: 30px ;
            margin-left: 300px;
            
        }
        img{
            margin-left: 15px;
            height: 50px;   
        }
    .neon-text {
        $random-text: 'underlying wire';
        position: relative;
        $stroke-width: $extra-large * 0.05;
        font-family: 'Pacifico', cursive;
        text-transform: uppercase;
        font-size: $extra-large;
        color: lighten($pink, 25%);
        -webkit-text-stroke-width: $stroke-width;
        -webkit-text-stroke-color: lighten($pink, 5%);
    @include center;
        text-shadow: 0 0 40px lighten($pink, 5%),
        0 0 40px lighten($pink, 5%),
        0 0 40px lighten($pink, 5%);
    &:after {
         content: $random-text;
         z-index: -1;
         position: absolute;
         color: transparent;
         -webkit-text-stroke-width: $stroke-width;
         -webkit-text-stroke-color: darken($pink, 40%);
         top: -5%;
         left: -0.5%;

     }
    }
    .button1 {
        height: 10px;
        display: inline-block;
        background: #a0a6b1;
        color: #fff;
        text-transform: uppercase;
        padding: 15px 15px;
        border-radius: 5px;
        box-shadow: 0px 10px 1px -1px rgba(0, 0, 0, 0.7);
        cursor: pointer;
        -webkit-transition: all ease-out 300ms;
    }
    .button1:hover {
        box-shadow: 0px 1px 1px -5px rgba(0, 0, 0, 0.2);
    }


    .button2 {
        height: 10px;
        display: inline-block;
        background: #a0a6b1;
        color: #fff;
        text-transform: uppercase;
        padding: 15px 15px;
        border-radius: 5px;
        box-shadow: 0px 10px 1px -1px rgba(0, 0, 0, 0.7);
        cursor: pointer;
        -webkit-transition: all ease-out 300ms;
    }
    .button2:hover {
        box-shadow: 0px 1px 1px -5px rgba(0, 0, 0, 0.2);

    }
    .button3 {
        height: 10px;
        display: inline-block;
        background: #a0a6b1;
        color: #fff;
        text-transform: uppercase;
        padding: 15px 15px;
        border-radius: 5px;
        box-shadow: 0px 10px 1px -1px rgba(0, 0, 0, 0.7);
        cursor: pointer;
        -webkit-transition: all ease-out 300ms;
    }
    .button3:hover {
        box-shadow: 0px 1px 1px -5px rgba(0, 0, 0, 0.2);




</style>

</head>

<body>



       
        {% block body %}{% endblock %}
       
<script
        src="https://code.jquery.com/jquery-2.2.4.min.js"
        integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
        crossorigin="anonymous"></script>
<script>

        $("#myDiv").find("input").prop('disabled', true);
        $('#chk').change(function(){
            if($(this).is(':checked'))    
            $("#myDiv").find("input").prop('disabled', false);
            else    
            $("#myDiv").find("input").prop('disabled', true);
        })
       
       $("#myDiv1").find("input").prop('disabled', true);
        $('#chk1').change(function(){
            if($(this).is(':checked'))    
            $("#myDiv1").find("input").prop('disabled', false);
            else    
            $("#myDiv1").find("input").prop('disabled', true);
       })



    // this variable is the list in the dom, it's initiliazed when the document is ready
    var $collectionHolder;
    // the link which we click on to add new items
    var $addNewItem = $('<a href="#" class="btn btn-info">Ajouter Option</a>');
    // when the page is loaded and ready
    $(document).ready(function () {
        // get the collectionHolder, initilize the var by getting the list;
        $collectionHolder = $('#option_list');
        // append the add new item link to the collectionHolder
        $collectionHolder.append($addNewItem);
        // add an index property to the collectionHolder which helps track the count of forms we have in the list
        $collectionHolder.data('index', $collectionHolder.find('.panel').length)
        // finds all the panels in the list and foreach one of them we add a remove button to it
        // add remove button to existing items
        $collectionHolder.find('.panel').each(function () {
            // $(this) means the current panel that we are at
            // which means we pass the panel to the addRemoveButton function
            // inside the function we create a footer and remove link and append them to the panel
            // more informations in the function inside
            addRemoveButton($(this));
        });
        // handle the click event for addNewItem
        $addNewItem.click(function (e) {
            // preventDefault() is your  homework if you don't know what it is
            // also look up preventPropagation both are usefull
            e.preventDefault();
            // create a new form and append it to the collectionHolder
            // and by form we mean a new panel which contains the form
            addNewForm();
        })
    });
    /*
     * creates a new form and appends it to the collectionHolder
     */
    function addNewForm() {
        // getting the prototype
        // the prototype is the form itself, plain html
        var prototype = $collectionHolder.data('prototype');
        // get the index
        // this is the index we set when the document was ready, look above for more info
        var index = $collectionHolder.data('index');
        // create the form
        var newForm = prototype;
        // replace the __name__ string in the html using a regular expression with the index value
        newForm = newForm.replace(/__name__/g, index);
        // incrementing the index data and setting it again to the collectionHolder
        $collectionHolder.data('index', index+1);
        // create the panel
        // this is the panel that will be appending to the collectionHolder
        var $panel = $('<div class="panel panel-warning"><div class="panel-heading"></div></div>');
        // create the panel-body and append the form to it
        var $panelBody = $('<div class="panel-body"></div>').append(newForm);
        // append the body to the panel
        $panel.append($panelBody);
        // append the removebutton to the new panel
        addRemoveButton($panel);
        // append the panel to the addNewItem
        // we are doing it this way to that the link is always at the bottom of the collectionHolder
        $addNewItem.before($panel);
    }

    /**
     * adds a remove button to the panel that is passed in the parameter
     * @param $panel
     */
    function addRemoveButton ($panel) {
        // create remove button
        var $removeButton = $('<a href="#" class="btn btn-danger">Remove</a>');
        // appending the removebutton to the panel footer
        var $panelFooter = $('<div class="panel-footer"></div>').append($removeButton);
        // handle the click event of the remove button
        $removeButton.click(function (e) {
            e.preventDefault();
            // gets the parent of the button that we clicked on "the panel" and animates it
            // after the animation is done the element (the panel) is removed from the html
            $(e.target).parents('.panel').slideUp(1000, function () {
                $(this).remove();
            })
        });
        // append the footer to the panel
        $panel.append($panelFooter);
    }

</script>
{% block javascripts %}{% endblock %}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous"></script>
</body>
</html>